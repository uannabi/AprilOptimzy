{"id":137725,"url":"http://en.wikipedia.org/wiki/Feistel_cipher","text":"In cryptography, a Feistel cipher is a symmetric structure used in the construction of block ciphers, named after the German IBM cryptographer Horst Feistel; it is also commonly known as a Feistel network. A large set of block ciphers use the scheme, including the Data Encryption Standard\nThe Feistel structure has the advantage that encryption and decryption operations are very similar, even identical in some cases, requiring only a reversal of the key schedule. Therefore the size of the code or circuitry required to implement such a cipher is nearly halved.\nFeistel construction is iterative in nature which makes implementing the cryptosystem in hardware easier.\nBit shuffling creates the diffusion effect, while substitution is used for confusion.\nTheoretical work.\nMany modern symmetric block ciphers use Feistel networks, and the structure and properties of Feistel ciphers have been extensively explored by cryptographers. Specifically, Michael Luby and Charles Rackoff analyzed the Feistel block cipher construction, and proved that if the round function is a cryptographically secure pseudorandom function, with Ki used as the seed, then 3 rounds is sufficient to make the block cipher a pseudorandom permutation, while 4 rounds is sufficient to make it a \"strong\" pseudorandom permutation (which means that it remains pseudorandom even to an adversary who gets oracle access to its inverse permutation). Because of this very important result of Luby and Rackoff, Feistel ciphers are sometimes called Luby-Rackoff block ciphers. Further theoretical studies generalized the construction, and defined more precise limits for security.\nConstruction.\nLet formula_1 be the round function and let\nformula_1 be the sub-keys for the rounds formula_1 respectively.\nSplit the plaintext block into two equal pieces, (formula_1, formula_1)\nFor each round formula_1, compute (calculate)\nThen the ciphertext is formula_1. (Commonly the two pieces formula_1 and formula_1 are not switched after the last round.)\nDecryption of a ciphertext formula_1 is accomplished by computing for formula_1\nThen formula_1 is the plaintext again.\nOne advantage of this model is that the round function formula_1 does not have to be \"invertible\", and can be very complex.\nUnbalanced Feistel ciphers use a modified structure where formula_1 and formula_1 are not of equal lengths. The MacGuffin cipher is an experimental example of such a cipher.\nThe Feistel construction is also used in cryptographic algorithms other than block ciphers. For example, the Optimal Asymmetric Encryption Padding (OAEP) scheme uses a simple Feistel network to randomize ciphertexts in certain asymmetric-key encryption schemes.\nList of Feistel ciphers.\nBlowfish,\nCamellia,\nDES,\nICE,\nKASUMI,\nLucifer,\nMARS,\nMAGENTA,\nTEA,\nTriple DES,\nGOST 28147-89\nMacGuffin,\nSkipjack","categories":[],"infobox_types":[],"annotations":[{"uri":"Cryptography","surface_form":"cryptography","offset":3},{"uri":"Block_cipher","surface_form":"block cipher","offset":87},{"uri":"IBM","surface_form":"IBM","offset":125},{"uri":"Horst_Feistel","surface_form":"Horst Feistel","offset":143},{"uri":"Block_cipher","surface_form":"block cipher","offset":221},{"uri":"Data_Encryption_Standard","surface_form":"Data Encryption Standard","offset":265},{"uri":"Encryption","surface_form":"encryption","offset":335},{"uri":"Decryption","surface_form":"decryption","offset":350},{"uri":"Key_schedule","surface_form":"key schedule","offset":453},{"uri":"Avalanche_effect","surface_form":"diffusion effect","offset":697},{"uri":"Symmetric-key_algorithm","surface_form":"symmetric","offset":787},{"uri":"Cryptanalysis","surface_form":"cryptographers","offset":919},{"uri":"Michael_Luby","surface_form":"Michael Luby","offset":949},{"uri":"Charles_Rackoff","surface_form":"Charles Rackoff","offset":966},{"uri":"Cryptography","surface_form":"cryptographically","offset":1073},{"uri":"Pseudorandom_function","surface_form":"pseudorandom function","offset":1098},{"uri":"Pseudorandom_permutation","surface_form":"pseudorandom permutation","offset":1202},{"uri":"Oracle_machine","surface_form":"oracle","offset":1376},{"uri":"Theoretical_computer_science","surface_form":"theoretical","offset":1551},{"uri":"Plaintext","surface_form":"plaintext","offset":1780},{"uri":"Ciphertext","surface_form":"ciphertext","offset":1897},{"uri":"Decryption","surface_form":"Decryption","offset":2011},{"uri":"MacGuffin_(cipher)","surface_form":"MacGuffin cipher","offset":2366},{"uri":"Experiment","surface_form":"experiment","offset":2389},{"uri":"Optimal_Asymmetric_Encryption_Padding","surface_form":"Optimal Asymmetric Encryption Padding","offset":2537},{"uri":"Random","surface_form":"random","offset":2622},{"uri":"Public-key_cryptography","surface_form":"asymmetric-key encryption","offset":2655},{"uri":"Blowfish_(cipher)","surface_form":"Blowfish","offset":2715},{"uri":"Camellia_(cipher)","surface_form":"Camellia","offset":2725},{"uri":"Data_Encryption_Standard","surface_form":"DES","offset":2735},{"uri":"Information_Concealment_Engine","surface_form":"ICE","offset":2740},{"uri":"KASUMI_(block_cipher)","surface_form":"KASUMI","offset":2745},{"uri":"Lucifer_(cipher)","surface_form":"Lucifer","offset":2753},{"uri":"MARS_(cryptography)","surface_form":"MARS","offset":2762},{"uri":"MAGENTA_(cipher)","surface_form":"MAGENTA","offset":2768},{"uri":"Tiny_Encryption_Algorithm","surface_form":"TEA","offset":2777},{"uri":"Triple_DES","surface_form":"Triple DES","offset":2782},{"uri":"GOST_28147-89","surface_form":"GOST 28147-89","offset":2794},{"uri":"MacGuffin_(cipher)","surface_form":"MacGuffin","offset":2808},{"uri":"Skipjack_(cipher)","surface_form":"Skipjack","offset":2819}]}