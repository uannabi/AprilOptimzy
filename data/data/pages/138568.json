{"id":138568,"url":"http://en.wikipedia.org/wiki/Embedded_system","text":"An embedded system is a computer that has been built to solve only a few very specific problems and is not easily changed. The word \"embedded\" means it is built into the system. It is a permanent part in a bigger system. It usually does not look like a computer, often no keyboard or monitor or mouse. But like any computer it has a processor, software, input and output.\nFor example, the controller embedded in an elevator tells the motor to move the elevator to different floors, based on buttons that are pushed. A decoder is embedded in a satellite television set-top box (called STB) to read a signal from the dish and send something that a TV understands. Often this type of system must do its work in a specific amount of time. This is called real-time computing. If a set-top box got interrupted to do another task, you would see a bad picture on the TV, for example. A general purpose computer will often have short pauses while it does something else, it is not real-time.\nEmbedded systems control many of the common devices in use today, such as card readers in hotel door locks or several things in a car. They can control small things like an MP3 player or a digital camera, and large things like traffic light systems, airplane<nowiki/>s, or assembly line<nowiki/>s in a factory.\nCommon features.\nEmbedded systems are not always standalone devices. Sometimes they are built as a set, like the various parts of a car - the radio, the throttle control, the pollution control, etc. Sometimes they can communicate to the internet or a cell-phone network and they may have a USB reader or other connections.\nUser interfaces.\nEmbedded systems range from no user interface at all \u2014 only sending and receiving electric signals \u2014 to a full graphical user interface like on a modern computer. Quite often they will have a few push-buttons and a small display and some LEDs. A more complex system may have a touch screen, allowing the meaning of the buttons to change with each screen as in smart phones.\nHardware.\nHardware includes the chips, wires, circuit boards, buttons and displays.\nCPUs.\nThe most important chip is the central processing unit or CPU. This runs the software instructions. It can be a standard microprocessor or a microcontroller. Microcontrollers include the microprocessor as well as simple peripheral equipment so the system can be smaller and cheaper. They have less flexibility because those parts cannot be changed. Usually these parts include Flash memory and support for serial ports, USB, etc.\nUnlike a microprocessor for a general-purpose computer, bigger and faster is not always better. Many embedded processors are very small. Sometimes this is to use less space or less power, sometimes it is to be cheaper. General-purpose computers will use microprocessors that read 32-bit or 64-bit words and run at speeds measured in GHz, but embedded processors are usually 4 to 32 bits and run at speeds usually measured in tens of MHz (a hundred times slower). (But the programs are also smaller and do not check for things that are not used).\nReady made computer boards.\nThere are \"ready-made\" computer boards that can be used in some embedded systems. These often use Windows CE, Linux, NetBSD, or an embedded real-time operating system.\nSometimes it may be easier to use a circuit board that is already made. These usually share many components with general purpose computers, but are smaller than one in a general purpose computer. Boards such as the VIA EPIA can run Microsoft Windows. The advantage is that it saves some electrical engineering time and can use the same software development tools used for PC-type software development. Examples of such embedded devices are the ATMs or displays in casinos. This works well if the real-time requirements are not real strict (it doesn't matter much if a job takes eight seconds instead of five, for example).\nASIC and FPGA solutions.\nIf the device needs to be very small or will be sold in very big numbers (\"high-volume\"), it makes sense to make a custom or specialized chip that does exactly what is needed. This is a system on a chip (SoC) which holds a complete system - processor, floating point unit, memory cache and interfaces on a single integrated circuit. SoCs can be made as a special-order application-specific integrated circuit (ASIC) or by using a field-programmable gate array (FPGA) which is programmed by the people building the embedded system.\nOperating systems.\nEmbedded systems often do not need a full operating system. Some use specially-built small and simple operating systems that start very quickly, others do not need one at all. Embedded systems are not adapted as easily, but they are built to perform their tasks much more reliably. Because the hardware is simpler, it is also often cheaper to build and runs faster.\nIn contrast to this, a general-purpose computer needs to be ready for new device drivers and software to run hardware it doesn't know about yet, like new printers or hard drives. It needs to run different application programs.\nAs embedded systems get bigger, things that used to be only on general-purpose computers or even mainframes are now becoming common on embedded systems. This includes protected memory space, and open programming environment including Linux, NetBSD, etc.\nReal-time operating systems include products like OS-II, Green Hills INTEGRITY, QNX or VxWorks. Unlike MacOS or Windows 7, these operating systems are not known very well by most people. But they are used in many places where time and safety is very important. People use them every day and do not realize it.\nCommon examples of larger kernels are Embedded Linux and Windows CE. Although these do not have the tight time limits needed for a strict real-time system, they are becoming more common, especially for more powerful devices such as Wireless Routers and GPSs. They allow re-use of code in the public domain for Device Drivers, Web Servers, Firewalls, and other code. Software developers that are more comfortable writing applications for PCs will find this more familiar as well. If needed, an FPGA or other special hardware can be used for things that do need tight time limits.\nTools.\nUnless restricted to external debugging, the programmer can typically load and run software through the tools, view the code running in the processor, and start or stop its operation. The view of the code may be as assembly code or source-code. Some integrated systems (like VxWorks or Green Hills) have special features, like keeping track of how much space the software takes as it runs, what tasks are running, and when things happen.\nDepending on what kind of embedded system is being made will affect how it can be debugged. For instance, debugging a single microprocessor system is different from debugging a system where processing is also done on a peripheral (DSP, FPGA, co-processor).\nSafety and Reliability.\nEmbedded systems are often in machines that are expected to run for years without errors, and in some cases recover by themselves if an error occurs. This means the software is usually developed and tested more carefully than that for personal computers, and unreliable mechanical moving parts such as disk drives and fans are avoided.","categories":[],"infobox_types":[],"annotations":[{"uri":"Computer","surface_form":"computer","offset":24},{"uri":"Microprocessor","surface_form":"processor","offset":333},{"uri":"Software","surface_form":"software","offset":344},{"uri":"Elevator","surface_form":"elevator","offset":415},{"uri":"Satellite_television","surface_form":"satellite television","offset":543},{"uri":"Real-time_computing","surface_form":"real-time computing","offset":750},{"uri":"MP3_player","surface_form":"MP3 player","offset":1156},{"uri":"Digital_camera","surface_form":"digital camera","offset":1172},{"uri":"Traffic_light","surface_form":"traffic light","offset":1210},{"uri":"Airplane","surface_form":"airplane","offset":1233},{"uri":"Assembly_line","surface_form":"assembly line","offset":1256},{"uri":"Pollution","surface_form":"pollution","offset":1469},{"uri":"USB","surface_form":"USB","offset":1584},{"uri":"Graphical_User_Interfaces_and_Consoles","surface_form":"graphical user interface","offset":1745},{"uri":"Push-button","surface_form":"push-button","offset":1830},{"uri":"Light-emitting_diode","surface_form":"LEDs","offset":1872},{"uri":"Touch_screen","surface_form":"touch screen","offset":1911},{"uri":"Smartphone","surface_form":"smart phones","offset":1994},{"uri":"Printed_circuit_board","surface_form":"circuit board","offset":2054},{"uri":"Central_processing_unit","surface_form":"central processing unit","offset":2129},{"uri":"Microprocessor","surface_form":"microprocessor","offset":2219},{"uri":"Microcontroller","surface_form":"microcontroller","offset":2239},{"uri":"Peripheral_equipment","surface_form":"peripheral equipment","offset":2318},{"uri":"Flash_memory","surface_form":"Flash memory","offset":2475},{"uri":"Serial_port","surface_form":"serial port","offset":2504},{"uri":"USB","surface_form":"USB","offset":2518},{"uri":"Windows_CE","surface_form":"Windows CE","offset":3200},{"uri":"Linux","surface_form":"Linux","offset":3212},{"uri":"NetBSD","surface_form":"NetBSD","offset":3219},{"uri":"Real-time_operating_system","surface_form":"real-time operating system","offset":3242},{"uri":"Electronic_component","surface_form":"components","offset":3367},{"uri":"Microsoft_Windows","surface_form":"Microsoft Windows","offset":3502},{"uri":"Electrical_engineering","surface_form":"electrical engineering","offset":3557},{"uri":"Automated_teller_machine","surface_form":"ATMs","offset":3714},{"uri":"System_on_a_chip","surface_form":"system on a chip","offset":4104},{"uri":"Processor","surface_form":"processor","offset":4159},{"uri":"Floating_point_unit","surface_form":"floating point unit","offset":4170},{"uri":"Cache","surface_form":"cache","offset":4198},{"uri":"Interface","surface_form":"interface","offset":4208},{"uri":"Integrated_circuit","surface_form":"integrated circuit","offset":4231},{"uri":"Application-specific_integrated_circuit","surface_form":"application-specific integrated circuit","offset":4287},{"uri":"Field-programmable_gate_array","surface_form":"field-programmable gate array","offset":4348},{"uri":"Operating_system","surface_form":"operating system","offset":4510},{"uri":"Device_driver","surface_form":"device driver","offset":4908},{"uri":"Mainframe","surface_form":"mainframe","offset":5158},{"uri":"Free_and_Open_Source_Software","surface_form":"open programming environment","offset":5256},{"uri":"Linux","surface_form":"Linux","offset":5295},{"uri":"NetBSD","surface_form":"NetBSD","offset":5302},{"uri":"Real-time_operating_system","surface_form":"Real-time operating system","offset":5315},{"uri":"OS-II","surface_form":"OS-II","offset":5365},{"uri":"QNX","surface_form":"QNX","offset":5395},{"uri":"VxWorks","surface_form":"VxWorks","offset":5402},{"uri":"MacOS","surface_form":"MacOS","offset":5418},{"uri":"Windows_7","surface_form":"Windows 7","offset":5427},{"uri":"Embedded_Linux","surface_form":"Embedded Linux","offset":5663},{"uri":"Windows_CE","surface_form":"Windows CE","offset":5682},{"uri":"Router","surface_form":"Wireless Routers","offset":5857},{"uri":"Global_Positioning_System","surface_form":"GPSs","offset":5878},{"uri":"Public_domain","surface_form":"public domain","offset":5917},{"uri":"Device_driver","surface_form":"Device Drivers","offset":5935},{"uri":"World_Wide_Web","surface_form":"Web Servers","offset":5951},{"uri":"Firewall_(networking)","surface_form":"Firewalls","offset":5964},{"uri":"Assembly_code","surface_form":"assembly code","offset":6426},{"uri":"Source-code","surface_form":"source-code","offset":6443},{"uri":"Floppy_disk","surface_form":"disk drives","offset":7232}]}