{"id":139183,"url":"http://en.wikipedia.org/wiki/Task_(computers)","text":"e=\"preserve\">A task is a set of program instructions that are loaded in memory, then the address registers is loaded with the initial address to start running the task. It is defined as \"an execution path through address space where part of a plan will be accomplished after executing the task'\".\nProcesses are often called tasks in embedded operating systems so \"task\" gives a meaning of a real-time (also small) application, which differs from a process. A process is an instance of a computer program. The kernel creates a process by allocating some memory (in kernel address space and user address space), loading program code from a disk or another part of memory into the newly allocated space, building the process tables and other operating systems structures, calculating the initial address then executes the process as one or more tasks.\nBoth \"task\" and \"process\" should be distinguished from event, which takes place at a specific time and place, and which can be planned for in a computer program. In a computer graphical user interface (GUI), an event can be as simple as a mouse click or keystroke.","categories":[],"infobox_types":[],"annotations":[{"uri":"Computer_program","surface_form":"program","offset":32},{"uri":"Instruction_(computer_science)","surface_form":"instruction","offset":40},{"uri":"RAM","surface_form":"memory","offset":72},{"uri":"Address_register","surface_form":"address register","offset":89},{"uri":"Embedded_system","surface_form":"embedded operating systems","offset":333},{"uri":"Real-time_computing","surface_form":"real-time","offset":391},{"uri":"Process_(computing)","surface_form":"process","offset":448},{"uri":"Event-driven_programming","surface_form":"event","offset":904},{"uri":"Graphical_user_interface","surface_form":"graphical user interface","offset":1025}]}