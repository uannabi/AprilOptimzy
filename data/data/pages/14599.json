{"id":14599,"url":"http://en.wikipedia.org/wiki/Boolean_algebra","text":"e=\"preserve\">In mathematics, Boolean algebra is an algebra for binary digits (where 0 means false and 1 means true). It is equipped with three operators: conjunction (AND), disjunction (OR) and negation (NOT). It uses normal math symbols, but it does not work in the same way. It is named for George Boole, who invented it in the middle 19th century. Boolean algebra did not get much attention except from mathematicians until the 20th century when engineer<nowiki/>s began using it for logic gate<nowiki/>s.\nNOT gate.\nIt means that the output is \"not\" the input.\nAND gate.\nThe output is true if and only if one and the other input is true.\nOR gate.\nIf one or the other input is true, then the output to be true (and false otherwise).\nXOR gate.\nXOR basically means \"exclusive or\", meaning one input or the other must be true, but not both. It is also sometimes called NOR, which means the same thing.\nIn other words, the XOR operator returns true precisely when one or the other input is true\u2014but not both.\nIdentities.\nIt is not the same as a NOT then an AND: formula_1\nwhich is called \"XOR identity table\"\nformula_1.\nor if formula_1=TRUE, TRUE.,\nDe Morgan's laws.\nThese findings are commonly known as De Morgan's laws.","categories":[],"infobox_types":[],"annotations":[{"uri":"Mathematics","surface_form":"mathematics","offset":16},{"uri":"Algebra","surface_form":"algebra","offset":51},{"uri":"Binary_number","surface_form":"binary","offset":63},{"uri":"Operation_(mathematics)","surface_form":"operators","offset":143},{"uri":"George_Boole","surface_form":"George Boole","offset":293},{"uri":"Engineer","surface_form":"engineer","offset":449},{"uri":"Logic_gate","surface_form":"logic gate","offset":487},{"uri":"If_and_only_if","surface_form":"if and only if","offset":593},{"uri":"UE","surface_form":"UE","offset":1142},{"uri":"De_Morgan%27s_laws","surface_form":"De Morgan's laws","offset":1202}]}