{"id":183620,"url":"http://en.wikipedia.org/wiki/Turing_complete","text":"e=\"preserve\">Turing complete is a term used in computability theory to describe abstract machines, usually called automata. Such an automaton is Turing complete, if it can be used to emulate a Turing machine. It is also called computationally universal.\nMost modern programming languages are Turing-complete. There are languages that are used to classify and describe the contents of documents; for example HTML. HTML is not Turing complete, because it cannot actively change the state of the system. HTML can be combined with a technology such as JavaScript; both together can be made Turing complete. The standard regular expressions, which most programming languages use, are not Turing complete either. Most regular expression engines have been adapted to include back-references. The problem with this is that a finite automaton cannot handle back references.","categories":[],"infobox_types":[],"annotations":[{"uri":"Computability_theory","surface_form":"computability theory","offset":47},{"uri":"Machine","surface_form":"machines","offset":89},{"uri":"Automaton","surface_form":"automaton","offset":132},{"uri":"Turing_machine","surface_form":"Turing machine","offset":193},{"uri":"Programming_language","surface_form":"programming languages","offset":266},{"uri":"HTML","surface_form":"HTML","offset":407},{"uri":"JavaScript","surface_form":"JavaScript","offset":548},{"uri":"Regular_expression","surface_form":"regular expressions","offset":616},{"uri":"Back-references","surface_form":"back-references","offset":768},{"uri":"Finite_automaton","surface_form":"finite automaton","offset":817}]}