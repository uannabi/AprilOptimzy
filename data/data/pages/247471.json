{"id":247471,"url":"http://en.wikipedia.org/wiki/Quine","text":"e=\"preserve\">A quine is a special kind of computer program, which accepts no inputs and outputs its own source code. They are named after the philosopher Willard Van Orman Quine.\nQuine's Paradox.\nQuine was very interested in the \"liar paradox\", \"this statement is false\", which can't be either true or false. This paradox appears in lots of other places. In the mathematics of set theory it is called Russell's paradox, it is a set which contains sets which don't contain themselves.\nAll of those examples before Quine were 'self-referential'. This means that they define an object in terms of itself, like the liar paradox starting with the words \"this statement\". Lots of people thought that you could ignore the liar paradox if you just decided to ignore all self-referential statements. Quine saw that you would also have to ignore \"quotation\", which is the process that happens when you put a phrase in quote marks. When you \"say\" a phrase, you are talking about its meaning; but when you \"quote\" a phrase, you are talking about that phrase, and not what it means.\nQuine's paradox was, '\"Yields falsehood when preceded by its quotation\" yields falsehood when preceded by its quotation.' This is a more complicated liar paradox which is not self-referential. It is a simple statement about some phrase, telling you what happens when you write a statement where you write the phrase in quote marks and then write the phrase again outside of them.\nQuines as programs.\nMost programming languages have quotation too: you can put quotes around some code and then the computer does not \"run\" that code, but instead just \"stores\" it as a string.\ns = 'def quine():\\n \"Returns its own source code\"\\n s = %s\\n return s %% repr(s)\\n'\nquine = -> ((t) -> t + JSON.stringify t) \"quine = -> ((t) -> t + JSON.stringify t) \"","categories":[],"infobox_types":[],"annotations":[{"uri":"Computer_program","surface_form":"computer program","offset":42},{"uri":"Source_code","surface_form":"source code","offset":104},{"uri":"Willard_Van_Orman_Quine","surface_form":"Willard Van Orman Quine","offset":154},{"uri":"Russell%27s_paradox","surface_form":"Russell's paradox","offset":401},{"uri":"Programming_languages","surface_form":"programming languages","offset":1475},{"uri":"String_(computer_science)","surface_form":"string","offset":1635}]}