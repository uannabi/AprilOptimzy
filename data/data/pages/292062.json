{"id":292062,"url":"http://en.wikipedia.org/wiki/Bubble_sort","text":"Bubble sort is a simple sorting algorithm. It is simple to understand, so it is usually taught to new students. It is not as efficient as some other sorting algorithms.\nBubble sort's name comes from the fact that each item in the list \u201Cbubbles\u201D up to where it should go, like bubbles in water.\nAlgorithm.\nThe algorithm compares pairs of elements in a list. The elements the make up the pairs are next to each other. Starting at one end of the list, the two elements in each pair are compared to each other in order. That means for example, the first and second element are compared, then the second and third element, and then the third and fourth, and so on. If the elements in the current pair are out of order, then the two elements switch places. This process \u2013 of comparing two elements \u2013 is done over and over again, until the whole list is sorted. The list is sorted, when there are no more pairs that have to be swapped.\nIn the best case scenario, where the list was already sorted before running the algorithm, the algorithm's complexity is O(n) (Big O notation). In the worst case, where the list starts off as being sorted in reverse, O(n\u00B2).\nImplementation.\nfor top \u2254 high(vector)\u22121 downto low(vector) do\nfor current \u2254 low(vector) to top do","categories":[],"infobox_types":[],"annotations":[{"uri":"Sorting_algorithm","surface_form":"sorting algorithm","offset":24},{"uri":"Liquid_Bubble","surface_form":"bubbles","offset":276},{"uri":"Water","surface_form":"water","offset":287},{"uri":"Algorithm","surface_form":"algorithm","offset":309},{"uri":"Array_data_structure","surface_form":"list","offset":351},{"uri":"Big_O_notation","surface_form":"Big O notation","offset":1056}]}