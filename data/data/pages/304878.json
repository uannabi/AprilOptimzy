{"id":304878,"url":"http://en.wikipedia.org/wiki/JIT","text":"=\"preserve\">JIT, Just-In-Time compilation is a way to translate bytecode instructions to instructions the processor understands. Bytecode is a set of computer instructions for a processor that only exists on paper.\nThe alternative to a JIT is an interpreter that looks at each bytecode instruction individually and then decides what to with it. When you run over the same part of the program again, an interpreter has to make the decisions again. While a JIT makes the decisions on how to handle the bytecode once, and then stores it as native processor instructions (this takes memory). Properly deciding how to translate bytecode take some time, so you have some minor slowdown in startup speed. A proper modern JIT first runs a regular interpreter, and then does the JIT step once it knows something is used frequently.","categories":[],"infobox_types":[],"annotations":[{"uri":"Compiler","surface_form":"compilation","offset":30},{"uri":"Bytecode","surface_form":"bytecode","offset":64},{"uri":"Interpreter_(computing)","surface_form":"interpreter","offset":246}]}