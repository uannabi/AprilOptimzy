{"id":322728,"url":"http://en.wikipedia.org/wiki/Linear_programming","text":"Linear programming or Linear optimisation is a field of mathematics that deals with finding optimal values or solutions that can be described with linear equations and inequalities. Very often this involves finding the minimal or maximal values, given some conditions, or constraints. Linear programming is often used for problems where no exact solution is known, for example for planning traffic flows. Linear programming is one of the main methods used in Operations research. Linear optimization is a special case of Convex optimization. It forms the basis for several methods of solving problems of Integer programming. In many cases, the solutions of linear programs can be mapped to Polyhedra, which allows solving and modelling certain problems geometrically.\nIn the case of linear programming, the word \"programming\" should be seen as \"planning\"; George Dantzig coined the term in the 1940s, long before computers were used to solve such problems. Looking at the information theory complexity, linear programming problems are simple, and can be solved efficiently using algorithms such as the interior point method. In many cases, the Simplex algorithm developed by Dantzig has proven to be very fast, even though its complexity is exponential, in the worst case.\nLeonid Kantorovich developed the first methods of linear programming in 1939.","categories":[],"infobox_types":[],"annotations":[{"uri":"Mathematics","surface_form":"mathematics","offset":56},{"uri":"Inequality","surface_form":"inequalities","offset":168},{"uri":"Operations_research","surface_form":"Operations research","offset":459},{"uri":"Convex_optimization","surface_form":"Convex optimization","offset":521},{"uri":"Integer_programming","surface_form":"Integer programming","offset":604},{"uri":"Polyhedron","surface_form":"Polyhedra","offset":690},{"uri":"Geometry","surface_form":"geometrically","offset":753},{"uri":"George_Dantzig","surface_form":"George Dantzig","offset":856},{"uri":"Computer","surface_form":"computer","offset":913},{"uri":"Complexity","surface_form":"complexity","offset":991},{"uri":"Algorithm","surface_form":"algorithm","offset":1079},{"uri":"Interior_point_method","surface_form":"interior point method","offset":1102},{"uri":"Simplex_algorithm","surface_form":"Simplex algorithm","offset":1144},{"uri":"Leonid_Kantorovich","surface_form":"Leonid Kantorovich","offset":1273}]}