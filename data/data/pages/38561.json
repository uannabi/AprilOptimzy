{"id":38561,"url":"http://en.wikipedia.org/wiki/Logical_volume_management","text":"Logical volume management is a method of allocating computer storage. It is about allocating space on \"mass storage devices\", like hard drives. It is more flexible than the partitioning of the drive into static (unchangeable) volumes. With a logical volume manager it is possible to grow partitions, even beyond the size of one physical disk. It is also possible to use striping or to put partitions together and combine them while they are being used.\nLogical volume management is a form of virtualisation. It makes it easier to adapt to the changing storage needs of computer users.\nDesign.\nVolume managers differ but some basic concepts exist across most versions. The volume manager starts with \"physical volumes\" or PVs, which can be hard disk partitions, RAID devices or SAN LUNs. PVs are split into small chunks of even size (a default of 4 MB on HP-UX) called \"physical extents\" or PEs. The PEs are then pooled into a \"volume group\" or VG.\nThe pooled PEs can then be concatenated together into virtual disk partitions called \"logical volumes\" or LVs. These LVs behave just like hard disk partitions: mountable file systems can be created on them, or they can be used as raw block devices for swap.\nThe LVs can be grown by concatenating more PEs from the pool. Some volume managers allow LV shrinking; some allow online resizing in either direction. Changing the size of the LV does not necessarily change the size of a filesystem on it; it merely changes the size of its containing space. A file system that can be resized online is recommended because it allows the system to adjust its storage on-the-fly without interrupting applications.\nPVs may also be organized into \"physical volume groups\" or PVGs. This allows LVs to be mirrored by pairing together its PEs with redundant ones on a different PVG, so that the failure of one PVG will still leave at least one complete copy of the LV online. In practice, PVGs are usually chosen so that their PVs are on different sets of disks and/or data buses for maximum redundancy.\nSome volume managers also implement snapshotting by applying copy-on-write (COW) to each PE. In this scheme, the volume manager will copy a PE to a \"COW table\" just before it is written to. This preserves an old version of the LE\u2014the \"snapshot\"\u2014which can later be reconstructed by overlaying the copy-on-write table on the current LE. Snapshots which are read-write are \"branching snapshots\" because they implicitly allow diverging versions of an LE.\nSnapshots can be useful for backing up self-consistent versions of volatile data like table files from a busy database, or for rolling back large changes in one swoop, such as an operating system upgrade. Some Linux-based LiveCD systems also use snapshots to simulate read-write access on a read-only compact disc.\nDisadvantages.\nThe levels of indirection that volume managers introduce can complicate disaster recovery, especially when the base operating system and other essential tools are themselves on an LE.","categories":[],"infobox_types":[],"annotations":[{"uri":"Hard_drive","surface_form":"hard drive","offset":131},{"uri":"Hard_disk","surface_form":"hard disk","offset":739},{"uri":"Partition_(computing)","surface_form":"partition","offset":749},{"uri":"RAID","surface_form":"RAID","offset":761},{"uri":"Storage_area_network","surface_form":"SAN","offset":777},{"uri":"LUN","surface_form":"LUN","offset":781},{"uri":"Megabyte","surface_form":"MB","offset":848},{"uri":"File_system","surface_form":"file system","offset":1118},{"uri":"Block_device","surface_form":"block device","offset":1182},{"uri":"Virtual_memory","surface_form":"swap","offset":1200},{"uri":"File_system","surface_form":"filesystem","offset":1427},{"uri":"Hard_disk","surface_form":"disks","offset":1987},{"uri":"Computer_bus","surface_form":"data buses","offset":2000},{"uri":"Snapshot_(computer_storage)","surface_form":"snapshotting","offset":2071},{"uri":"Copy-on-write","surface_form":"copy-on-write","offset":2096},{"uri":"Copy-on-write","surface_form":"copy-on-write","offset":2331},{"uri":"Linux","surface_form":"Linux","offset":2696},{"uri":"LiveCD","surface_form":"LiveCD","offset":2708},{"uri":"Compact_disc","surface_form":"compact disc","offset":2787},{"uri":"Disaster_recovery","surface_form":"disaster recovery","offset":2888}]}