{"id":38952,"url":"http://en.wikipedia.org/wiki/Travelling_salesman_problem","text":"The Traveling Salesman Problem (often called TSP) is a classic algorithmic problem in the field of computer science and operations research. It is focused on optimization. In this context, \"better solution\" often means \"a solution that is cheaper, shorter, or faster\". TSP is a mathematical problem. It is most easily expressed as a graph describing the locations of a set of nodes.\nThe traveling salesman problem was defined in the 1800s by the Irish mathematician W. R. Hamilton and by the British mathematician Thomas Kirkman. Hamilton\u2019s Icosian Game was a recreational puzzle based on finding a Hamiltonian cycle. The general form of the TSP appears to have been first studied by mathematicians during the 1930s in Vienna and at Harvard, notably by Karl Menger. Menger defines the problem, considers the obvious brute-force algorithm, and observes the non-optimality of the nearest neighbour heuristic:We denote by \"messenger problem\" (since in practice this question should be solved by each postman, anyway also by many travelers) the task to find, for \uFB01nitely many points whose pairwise distances are known, the shortest route connecting the points. Of course, this problem is solvable by finitely many trials. Rules which would push the number of trials below the number of permutations of the given points, are not known. The rule that one first should go from the starting point to the closest point, then to the point closest to this, etc., in general does not yield the shortest route.Hassler Whitney at Princeton University introduced the name \"traveling salesman problem\" soon after.\nStating the problem.\nThe Travelling Salesman Problem describes a salesman who must travel between N cities. The order in which he does so is something he does not care about, as long as he visits each once during his trip, and finishes where he was at first. Each city is connected to other close by cities, or nodes, by airplanes, or by road or railway. Each of those links between the cities has one or more weights (or the cost) attached. The cost describes how \"difficult\" it is to traverse this edge on the graph, and may be given, for example, by the cost of an airplane ticket or train ticket, or perhaps by the length of the edge, or time required to complete the traversal. The salesman wants to keep both the travel costs, as well as the distance he travels as low as possible.\nThe Traveling Salesman Problem is typical of a large class of \"hard\" optimization problems that have intrigued mathematicians and computer scientists for years. Most important, it has applications in science and engineering. For example, in the manufacture of a circuit board, it is important to determine the best order in which a laser will drill thousands of holes. An efficient solution to this problem reduces production costs for the manufacturer.\nDifficulty.\nIn general, the traveling salesman problem is hard to solve. If there is a way to break this problem into smaller component problems, the components will be at least as complex as the original one. This is what computer scientists call NP-hard problems.\nMany people have studied this problem. The easiest (and most expensive solution) is to simply try all possibilities. The problem with this is that for N cities you have (N-1) factorial possibilities. This means that for only 10 cities there are over 180 thousand combinations to try (since the start city is defined, there can be permutations on the remaining nine). We only count half since each route has an equal route in reverse with the same length or cost.\n9! / 2 = 181 440","categories":[],"infobox_types":[],"annotations":[{"uri":"Computer_science","surface_form":"computer science","offset":99},{"uri":"Operations_research","surface_form":"operations research","offset":120},{"uri":"Optimization_(computer_science)","surface_form":"optimization","offset":158},{"uri":"Graph_theory","surface_form":"graph","offset":333},{"uri":"Node","surface_form":"node","offset":376},{"uri":"William_Rowan_Hamilton","surface_form":"W. R. Hamilton","offset":466},{"uri":"Thomas_Kirkman","surface_form":"Thomas Kirkman","offset":514},{"uri":"Icosian_Game","surface_form":"Icosian Game","offset":541},{"uri":"Hamiltonian_cycle","surface_form":"Hamiltonian cycle","offset":599},{"uri":"Karl_Menger","surface_form":"Karl Menger","offset":753},{"uri":"Nearest_neighbour_algorithm","surface_form":"nearest neighbour","offset":878},{"uri":"Heuristic","surface_form":"heuristic","offset":896},{"uri":"Finite_set","surface_form":"\uFB01nitely","offset":1059},{"uri":"Permutation","surface_form":"permutation","offset":1282},{"uri":"Hassler_Whitney","surface_form":"Hassler Whitney","offset":1497},{"uri":"Princeton_University","surface_form":"Princeton University","offset":1516},{"uri":"Airplane","surface_form":"airplane","offset":1919},{"uri":"Road","surface_form":"road","offset":1936},{"uri":"Railway","surface_form":"railway","offset":1944},{"uri":"Distance","surface_form":"distance","offset":2346},{"uri":"Scientists","surface_form":"scientists","offset":3072},{"uri":"NP-hardness","surface_form":"NP","offset":3088},{"uri":"Factorial","surface_form":"factorial","offset":3281},{"uri":"Combination","surface_form":"combination","offset":3369}]}