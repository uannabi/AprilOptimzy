{"id":56349,"url":"http://en.wikipedia.org/wiki/Lisp_(programming_language)","text":"Lisp (used to be called LISP) is a programming language. It is among the oldest programming languages that are still used today. Only Fortran is one year older. Lisp was designed by John McCarthy in 1958. The best-known versions of LISP are Common Lisp, Scheme and Clojure. Many concepts that are used in modern programming languages were first created in Lisp.\nLinked lists are a very important data structure in Lisp.\nThe basic concepts behind Lisp are easy to learn. Logo is another version of Lisp that was made for children. Logo can help young children develop skills and become efficient within the programming language.\nSimple examples (Scheme).\nBecause Lisp is a functional language, Lisp programs often use recursion to solve problems. Here is a Scheme program that finds the factorial of a number. The function <kbd>(factorial n)</kbd> starts by testing if formula_1 or not. If formula_1, then <kbd>(factorial 0)</kbd> is 1. If formula_1, then <kbd>(factorial n)</kbd> returns the product of formula_1 and the factorial of formula_1.\nLinked lists are an important idea in Lisp. The list without any things in it is known as the \"empty\" or \"nil list\", and is written as <kbd>'()</kbd>. A list that has things in it is written as <kbd>'(dog cat)</kbd>.\nThe operation <kbd>car</kbd> is used to get the first thing of a list. For example,\nThe operation <kbd>cdr</kbd> returns everything in the list except for the first thing.","categories":[],"infobox_types":[],"annotations":[{"uri":"Programming_language","surface_form":"programming language","offset":35},{"uri":"Fortran","surface_form":"Fortran","offset":134},{"uri":"John_McCarthy","surface_form":"John McCarthy","offset":182},{"uri":"Common_Lisp","surface_form":"Common Lisp","offset":241},{"uri":"Scheme_(programming_language)","surface_form":"Scheme","offset":254},{"uri":"Clojure","surface_form":"Clojure","offset":265},{"uri":"Linked_list","surface_form":"Linked list","offset":362},{"uri":"Logo_(programming_language)","surface_form":"Logo","offset":470},{"uri":"Scheme_(programming_language)","surface_form":"Scheme","offset":645},{"uri":"Functional_programming","surface_form":"functional language","offset":672},{"uri":"Recursion","surface_form":"recursion","offset":717},{"uri":"Scheme_(programming_language)","surface_form":"Scheme","offset":756},{"uri":"Factorial","surface_form":"factorial","offset":786},{"uri":"Multiplication","surface_form":"product","offset":992},{"uri":"Linked_list","surface_form":"Linked list","offset":1045}]}