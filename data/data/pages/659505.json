{"id":659505,"url":"http://en.wikipedia.org/wiki/Tcl","text":"Tcl (pronounced \"tickle\" or \"tee cee ell\") or Tool Command Language is a High-level programming language which can be used for many things. Tcl was made to be easy to use, but able to do many things. Tcl's language is based on commands which tell the computer what to do or how to save a variable. Tcl is able to do object-oriented, imperative, functional, or procedural styles.\nTcl is used a lot to in C to create prototypes quickly. There are interpreters available for many operating systems. This means many different kinds of computers are able to run Tcl code. Tcl is a very small language which means it is good to use as embedded systems.\nTcl is sometimes combined with Tk. When it is, it is called Tcl/Tk. Tcl/Tk is a part of the normal Python installation.\nHistory.\nTcl was created by John Ousterhout at University of California, Berkeley. Ousterhout won a ACM Software System Award in 1997 for making Tcl/Tk.\nSafe-Tcl is a form of Tcl that has certain parts turned off so it can't hurt the computer which is running it. Nathaniel Borenstein and Marshall Rose created Safe-Tcl. Safe-Tcl can only work on some files including email messages.\nExamples.\nIn that example, \"Hello, World!\" is called a string. Tcl adds a special character which can't be seen at the end of a line. This character tells the computer to go a new line after the command is complete.\nputs \"The answer is $ans.\" # The computer would show: \"The answer is 6.\"\nThe command \"expr\" tells the computer to solve the \"expression\" or, in this case, an equation.","categories":[],"infobox_types":[],"annotations":[{"uri":"High-level_programming_language","surface_form":"High-level programming language","offset":73},{"uri":"Computer","surface_form":"computer","offset":251},{"uri":"Variable","surface_form":"variable","offset":288},{"uri":"Object-oriented_programming","surface_form":"object-oriented","offset":316},{"uri":"C_(programming_language)","surface_form":"C","offset":403},{"uri":"Prototype","surface_form":"prototype","offset":415},{"uri":"Interpreter_(computing)","surface_form":"interpreters","offset":445},{"uri":"Operating_systems","surface_form":"operating systems","offset":477},{"uri":"Computer_programming","surface_form":"code","offset":561},{"uri":"Embedded_system","surface_form":"embedded system","offset":629},{"uri":"TK_(software","surface_form":"Tk","offset":678},{"uri":"Python_(programming_language)","surface_form":"Python","offset":746},{"uri":"Installation_(computer_programs)","surface_form":"installation","offset":753},{"uri":"John_Ousterhout","surface_form":"John Ousterhout","offset":795},{"uri":"University_of_California%2C_Berkeley","surface_form":"University of California, Berkeley","offset":814},{"uri":"ACM_Software_System_Award","surface_form":"ACM Software System Award","offset":867},{"uri":"Nathaniel_Borenstein","surface_form":"Nathaniel Borenstein","offset":1031},{"uri":"Marshall_Rose","surface_form":"Marshall Rose","offset":1056},{"uri":"Computer_file","surface_form":"files","offset":1119},{"uri":"String_(computer_science)","surface_form":"string","offset":1206},{"uri":"Equation","surface_form":"equation","offset":1525}]}